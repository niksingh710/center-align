#!/usr/bin/env bash

# author="Nikhil Sing"
# email="nik.singh710@gmail.com"

main() {
	all=false
	# ArgumentParser
	while (( $# > 0 )); do
		case "$1" in
		-h | --help)
			help
			exit 0
			;;
		-a | --all)
			all=true
			shift
			;;
		*)
			echo "Invalid argument $1"
			help
			exit 1
			;;
		esac
	done

	IFS=$'\n'$'\r'
	content=()
	while read -r line; do
		content+=("$line")
	done

	# Call "cat" to initialize $LINES and $COLUMNS
	cat /dev/null
	(( upper_padding = (LINES - ${#content[@]}) / 2 ))
	(( upper_padding < 1 )) && upper_padding=0

	printf -v upper_padding '%*s' $upper_padding ''
	printf '%b' "${upper_padding// /\\n}"

	if $all; then
		for i in "${content[@]}"; do
			printf "%*s\n" $(((COLUMNS + ${#i}) / 2)) "$i"
		done
	else
		getMaxlen "${content[@]}"
		printf -v left_padding '%*s' $(((COLUMNS - max) / 2 )) ''
		printf "$left_padding%s\n" "${content[@]}"
	fi

	printf '%b' "${upper_padding// /\\n}"
}

getMaxlen() {
	for i in "$@"; do
		if (( ${#i} > max )); then
			max=${#i}
		fi
	done
}

help() {
	cat <<EOF
  This command will take input from pipe (stdout) and will center that data in terminal

flags:
    -h, --help: show this help
    -a, --all: will center every line individually (Horizontal center)

usage:
    command | center-align
    command | center-align -a

EOF
}

main "$@"
